{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","Dialog","dia","id","dialog","to","activeClassName","active","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCWpMC,EAPC,SAACC,GAEb,OAAO,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMG,U,QCU9BC,EAVA,SAACJ,GACZ,IAAIK,EAAM,YAAcL,EAAMM,GAE9B,OAAO,yBAAKL,UAAWC,IAAEK,QACrB,kBAAC,IAAD,CAASC,GAAIH,EAAKI,gBAAiBP,IAAEQ,QAASV,EAAMW,Q,yCCkCtDC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAW,CAACC,KAAM,wBAAlBD,EAdL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAAiBW,YAAY,kBAC9DC,SAAU,CAACC,IAAUZ,MAErB,6BACI,6CAQLa,EArDC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQpB,KAAMoB,EAAEpB,KAAMqB,IAAKD,EAAEzB,GAAIA,GAAIyB,EAAEzB,QAEjD2B,EAAmBP,EAAMQ,SACxBJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAShC,QAASgC,EAAEhC,QAAS6B,IAAKG,EAAE7B,QAQlD,OAAKN,EAAMoC,OAIP,yBAAKnC,UAAWC,IAAE2B,SACd,yBAAK5B,UAAWC,IAAEmC,cACbT,GAGL,yBAAK3B,UAAWC,IAAEgC,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAfb,SAACqB,GAClBtC,EAAMuC,YAAYD,EAAOE,qBAGF,kBAAC,IAAD,CAAUhC,GAAI,Y,wCCtBxCiC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCeRO,sBACXC,aAfkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKjD,MAAMoC,OACjB,kBAACW,EAAcE,KAAKjD,OADY,kBAAC,IAAD,CAAUQ,GAAG,eAHT,GACX0C,IAAMH,WAUtC,OAFqCH,YAASH,EAATG,CAAqCI,KCG/DL,CAGblB","file":"static/js/3.1b7b954c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2BgM1\",\"dialogsItems\":\"Dialogs_dialogsItems__HJcr9\",\"dialog\":\"Dialogs_dialog__341dp\",\"active\":\"Dialogs_active__3wGKT\",\"messages\":\"Dialogs_messages__2y_xT\",\"message\":\"Dialogs_message__pDlgq\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n// message in chat\r\n\r\nconst Message = (props) => {\r\n\r\n    return <div className={s.message}>{props.message}</div>\r\n\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// chat message from server\r\n// unfinished server side\r\n\r\nconst Dialog = (props) => {\r\n    let dia = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog} >\r\n        <NavLink to={dia} activeClassName={s.active}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport Dialog from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from '../../utils/validators/validations';\r\n\r\n\r\n// dialogs page with future work messanger\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(d => <Dialog name={d.name} key={d.id} id={d.id} />); //user id for chat\r\n\r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message} key={m.id} />); //message id for chat\r\n\r\n    //let newMessageBody = state.newMessageBody;   \r\n    \r\n    let addNewMessage = (values) => { \r\n       props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />; // if not login, than redirect to login page\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            \r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n//field to enter message\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter something\" \r\n                validate={[required, maxLength50]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Send</button>\r\n                    </div>\r\n                </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm ({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// high order component for authentification\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n    return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n    \r\n}\r\n\r\n","//import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n//container component for security\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"sourceRoot":""}